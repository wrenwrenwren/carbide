/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author weiren
 */
public class data_entry extends javax.swing.JFrame {

    /**
     * Creates new form data_entry
     */
    public data_entry() {
        initComponents();

        jTextField1.setText(sdf.format(dt));        

        load_account_names(); 
    }
    
    ArrayList <data_entry_table> total_data_entry_table = new ArrayList <data_entry_table>();
    DateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
    Date dt = new Date();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField7 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Date:");

        jLabel2.setText("Symbol:");

        jLabel3.setText("Amount:");

        jLabel4.setText("Expiry:");

        jLabel5.setText("Strike:");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel6.setText("Price:");

        jLabel7.setText("Type:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C", "P", "F" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Comments:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setText("Write to File");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setText("Account:");

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jLabel10.setText("Strategy:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Absolute", "Hedge" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(jTextField3)
                            .addComponent(jTextField1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox1, 0, 112, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                            .addComponent(jTextField6))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(118, 118, 118)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(27, 27, 27)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String date = jTextField1.getText().replaceAll(" ","");
        String symbol = jTextField2.getText().replaceAll(" ","");
        
        float amount;
        String amount_string = jTextField3.getText().replaceAll(" ","");
        if (amount_string.equals("")) {
            amount = 0;
        } else {
            amount = Float.valueOf(amount_string);
        }
        
        float strike;
        String strike_string = jTextField5.getText().replaceAll(" ","");
                
        if (strike_string.equals("")) {
            strike = 0;
        } else {
            strike = Float.valueOf(strike_string);
        }
        
        float price;
        String price_string = jTextField6.getText().replaceAll(" ","");

        if (price_string.equals("")) {
            price = 0;
        } else {
            price = Float.valueOf(price_string);
        }

        String type = String.valueOf(jComboBox1.getSelectedItem());
        String expiry = jTextField7.getText().replaceAll(" ","");
        String comments = jTextArea1.getText();
        String account = String.valueOf(jComboBox2.getSelectedItem());
        System.out.println(account);
        boolean empty = symbol.isEmpty() || expiry.isEmpty() || account.isEmpty();

        if (empty == true){
            JFrame error_frame = new JFrame();
            JOptionPane.showMessageDialog(error_frame, "Please check your input! No blanks!", "Error in Data Entry!",JOptionPane.ERROR_MESSAGE);

        } else {
            if (account != "ALL"){
                data_entry_table new_entry = new data_entry_table();

                new_entry.Date = date;
                new_entry.Symbol = symbol;
                new_entry.Amount = amount;
                new_entry.Strike = strike;
                new_entry.Price = price;
                new_entry.Type = type;
                new_entry.Expiry = expiry;
                new_entry.Comments = comments;
                new_entry.Account = account;

                total_data_entry_table.add(new_entry);
            } else {
                try {
                    
                    String to_select = String.valueOf(jComboBox3.getSelectedItem());
                    String homedirec = System.getProperty("user.home");
                    String account_weights_direc = null;
                    
                    if (to_select.equals("Absolute")){
                        account_weights_direc = homedirec + "/carbide/accounts/account_weights.csv";
                    } else {
                        account_weights_direc = homedirec + "/carbide/accounts/account_weights_hedge.csv";
                    }

                    BufferedReader br = null;

                    Object[][] data = new Object[0][0];
                    String line = "";
                    String splitSign = ",";

                    int i = 0;
                    br = new BufferedReader(new FileReader(account_weights_direc));

                    while (br.readLine() != null) {
                        i++;
                    }
                    br.close();
                    data = new Object[i - 1][];
                    i = 0;
                    br = new BufferedReader(new FileReader(account_weights_direc));
                    line = br.readLine();

                    line = br.readLine();
                    while (line != null) {
                        data[i] = new Object[line.split(splitSign).length];

                        for (int j = 0; j < data[i].length; j++) {
                            data[i][j] = line.split(splitSign)[j];
                        }
                        i++;
                        line = br.readLine();
                    }

                    for (int j = 0; j < data.length; j++){

                        data_entry_table new_entry = new data_entry_table();

                        new_entry.Date = date;
                        new_entry.Symbol = symbol;
                        new_entry.Amount = Math.round(amount * Float.valueOf((String) data[j][3]));
                        new_entry.Strike = strike;
                        new_entry.Price = price;
                        new_entry.Type = type;
                        new_entry.Expiry = expiry;
                        new_entry.Comments = comments;
                        new_entry.Account = (String) data[j][0] + "-" + (String) data[j][1];

                        total_data_entry_table.add(new_entry);
                    }

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(data_entry.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(data_entry.class.getName()).log(Level.SEVERE, null, ex);
                }
            } 

            jTextField1.setText(sdf.format(dt));
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField7.setText("");
            jTextField5.setText("");
            jTextField6.setText("");
            jTextArea1.setText("");
            jComboBox1.setSelectedIndex(0);
            jComboBox2.setSelectedIndex(0);
            jComboBox3.setSelectedIndex(0);
        }
        
   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String homedirec = System.getProperty("user.home");
        String dataentry_path = homedirec + "/carbide/Data_Entry";
        
        if (new File(dataentry_path).exists()) {
            try {
                writeToCSV(total_data_entry_table, dataentry_path);
                total_data_entry_table.clear();
                        
            } catch (FileNotFoundException ex) {
                Logger.getLogger(data_entry.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            new File(dataentry_path).mkdir();
            try {
                writeToCSV(total_data_entry_table, dataentry_path);
                total_data_entry_table.clear();
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(data_entry.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        
        String to_select = String.valueOf(jComboBox3.getSelectedItem());

        if (to_select.equals("Absolute")){
            load_account_names();
        } else {
            load_account_names_hedge();
        }
    }//GEN-LAST:event_jComboBox3ActionPerformed

    public class data_entry_table {
        public String Date;
        public String Symbol;
        public float Amount;
        public float Strike;
        public float Price;
        public String Type;
        public String Expiry;
        public String Comments;
        public String Account;

        public  String getDate(){
            return Date;
        }
        
        public String getSymbol(){
            return Symbol;
        }
        
        public float getAmount(){
            return Amount;
        }
        
        public float getStrike(){
            return Strike;
        }
        
        public float getPrice(){
            return Price;
        }
        
        public  String getType(){
            return Type;
        }
        
        public String getExpiry(){
            return Expiry;
        }
        
        public String getComments(){
            return Comments;
        }
        
        public String getAccount(){
            return Account;
        }
        
        public void setDate(String Date){
            this.Date = Date;
        }
        
        public void setSymbol(String Symbol){
            this.Symbol = Symbol;
        }
        
        public void setAmount(float Amount){
            this.Amount = Amount;
        }
        
        public void setStrike(float Strike){
            this.Strike = Strike;
        }
        
        public void setPrice(float Price){
            this.Price = Price;
        }
        
        public void setType(String Type){
            this.Type = Type;
        }
        
        public void setExpiry(String Expiry){
            this.Expiry = Expiry;
        }
        
        public void setComments(String Comments){
            this.Comments = Comments;
        }
        
        public void setAccount(String Account){
            this.Account = Account;
        }
        
    }
    
    
    public static final String CSV_SEPARATOR = ",";
    
    public static void writeToCSV(ArrayList<data_entry_table> data_entered, String savepath) throws FileNotFoundException { 

        try {
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd-HH_mm_ss");
            Date date = new Date();
            String file_to_save = savepath + "/" + dateFormat.format(date) + ".csv";
            
            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file_to_save), "UTF-8"));
            
            StringBuffer header = new StringBuffer();            
            header.append("Date");
            header.append(CSV_SEPARATOR);
            header.append("Symbol");
            header.append(CSV_SEPARATOR);
            header.append("Amount");
            header.append(CSV_SEPARATOR);
            header.append("Strike");
            header.append(CSV_SEPARATOR);
            header.append("Price");
            header.append(CSV_SEPARATOR);
            header.append("Type");
            header.append(CSV_SEPARATOR);
            header.append("Expiry");
            header.append(CSV_SEPARATOR);
            header.append("Comments");
            header.append(CSV_SEPARATOR);
            header.append("Account");
            bw.write(header.toString());
            bw.newLine();
          
            
            for (data_entry_table items : data_entered)
            {
                StringBuffer oneLine = new StringBuffer();
                
                oneLine.append(items.getDate());
                oneLine.append(CSV_SEPARATOR);
                oneLine.append(items.getSymbol());
                oneLine.append(CSV_SEPARATOR);
                oneLine.append(items.getAmount());
                oneLine.append(CSV_SEPARATOR);
                oneLine.append(items.getStrike());
                oneLine.append(CSV_SEPARATOR);
                oneLine.append(items.getPrice());
                oneLine.append(CSV_SEPARATOR);
                oneLine.append(items.getType());
                oneLine.append(CSV_SEPARATOR);
                oneLine.append(items.getExpiry());
                oneLine.append(CSV_SEPARATOR);
                oneLine.append(items.getComments());
                oneLine.append(CSV_SEPARATOR);
                oneLine.append(items.getAccount());
                bw.write(oneLine.toString());
                bw.newLine();
            }
            bw.flush();
            bw.close();
        }
        
        catch (UnsupportedEncodingException e) {}
        catch (FileNotFoundException e){}
        catch (IOException e){}

    }
    
    public void load_account_names(){
        
        try {
            String homedirec = System.getProperty("user.home");
            String account_name_direc = homedirec + "/carbide/accounts/accounts.csv";
            
            BufferedReader br_acc = null;

            Object[][] data_acc = new Object[0][0];
            String line = "";
            String splitSign = ",";

            int p = 0;
            br_acc = new BufferedReader(new FileReader(account_name_direc));

            while (br_acc.readLine() != null) {
                p++;
            }
            br_acc.close();
            data_acc = new Object[p - 1][];
            p = 0;
            br_acc = new BufferedReader(new FileReader(account_name_direc));
            line = br_acc.readLine();

            line = br_acc.readLine();
            while (line != null) {
                data_acc[p] = new Object[line.split(splitSign).length];
                 for (int j = 0; j < data_acc[p].length; j++) {
                    data_acc[p][j] = line.split(splitSign)[j];
                }
                p++;
                line = br_acc.readLine();
            }
            
            ArrayList<String> account_names = new ArrayList<String>();
            account_names.add("ALL");            
            
            for (int m = 0; m < data_acc.length; m++){
                String account_info = (String) data_acc[m][0];
                account_info = account_info + "-" + (String) data_acc[m][1];
                account_names.add(account_info);
            }
 
            String[] accountarr = new String[account_names.size()];
            accountarr = account_names.toArray(accountarr);
            jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(accountarr));
            
        } catch (IOException ex) {
            Logger.getLogger(data_entry.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void load_account_names_hedge(){
        
        try {
            String homedirec = System.getProperty("user.home");
            String account_name_direc = homedirec + "/carbide/accounts/accounts_hedge.csv";
            
            BufferedReader br_acc = null;

            Object[][] data_acc = new Object[0][0];
            String line = "";
            String splitSign = ",";

            int p = 0;
            br_acc = new BufferedReader(new FileReader(account_name_direc));

            while (br_acc.readLine() != null) {
                p++;
            }
            br_acc.close();
            data_acc = new Object[p - 1][];
            p = 0;
            br_acc = new BufferedReader(new FileReader(account_name_direc));
            line = br_acc.readLine();

            line = br_acc.readLine();
            while (line != null) {
                data_acc[p] = new Object[line.split(splitSign).length];
                 for (int j = 0; j < data_acc[p].length; j++) {
                    data_acc[p][j] = line.split(splitSign)[j];
                }
                p++;
                line = br_acc.readLine();
            }
            
            ArrayList<String> account_names = new ArrayList<String>();
            account_names.add("ALL");            
            
            for (int m = 0; m < data_acc.length; m++){
                String account_info = (String) data_acc[m][0];
                account_info = account_info + "-" + (String) data_acc[m][1];
                account_names.add(account_info);
            }
 
            String[] accountarr = new String[account_names.size()];
            accountarr = account_names.toArray(accountarr);
            jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(accountarr));
            
        } catch (IOException ex) {
            Logger.getLogger(data_entry.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
